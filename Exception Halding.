"""
Exception Halding.


An exception is an error that occurs during program execution. Examples:

ZeroDivisionError → Division by zero
ValueError → Invalid value for an operation
TypeError → Incorrect type used in an operatio



"""

num = input("Please enter a numner")
try:
    for i in range(1,11):
        print(f"{int(num)} X {i} = ", {int(num)}*i)
        
except:
    print("Please enter integer.")



num1 = input("Please enter one numbers.")
num2 = input("Please enter two numbers.")
try:
    num = int(num1)+ int(num2)
    print(num)
except:
    print("Please enter valid input.")

"""
In Python, the finally block is used in a try-except-finally structure to execute a block of code regardless of whether an exception occurs or not.
 It is typically used to perform cleanup actions, such as closing a file or releasing a resource.
"""

def nuumber():
    try:
        num = [1,2,3,4,5,6,7]
        userinput = int(input("Please enter the index value of the number"))
        print(f"The index value of {userinput} is {num[userinput]}")
        return 1
    
    except:
        print("Please enter the proper value. ")
        return 0
    
    finally:
        print("I will executed.")
    
x=nuumber()
print(x)
